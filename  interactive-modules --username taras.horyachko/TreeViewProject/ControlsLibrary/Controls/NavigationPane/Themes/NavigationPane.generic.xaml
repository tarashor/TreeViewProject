<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:res="http://tarashor/wpf/themes/2012"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    mc:Ignorable="d"
    xmlns:local="clr-namespace:ControlsLibrary.Controls"
    xmlns:conv="clr-namespace:ControlsLibrary.Converters">

    <local:NavHeaderMaxHeightConverter x:Key="NavHeaderMaxHeightConverter" />
    <local:NavItemsVisibilityConverter x:Key="NavItemsVisibilityConverter" />
    <local:FixedNavigationItemsConverter x:Key="FixedNavigationItemsConverter" />
    <conv:BooleanToVisibilityConverterEx x:Key="BooleanToVisibilityConverter" Inverted="True" />

    <SolidColorBrush x:Key="ArrowBrush" Color="#4371B0" />

    <Path x:Key="MoreButtonArrow"
          Data="M 0,0 L 2,0 L 1,1 Z" />

    <Style x:Key="DoubleArrowToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static res:CustomResources.ButtonFocusVisualKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static res:CustomResources.NormalGradientBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static res:CustomResources.BorderBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ContentControl FocusVisualStyle="{TemplateBinding FocusVisualStyle}">
                        <Grid Width="26" Background="Transparent">
                            <Path Stretch="Fill" Stroke="{DynamicResource {x:Static res:CustomResources.LabelHighlightBrushKey}}" Data="M3.0625,11.5625 L7.03125,7.59375 10.937254,11.499754" 
                              Width="8" Height="4" RenderTransformOrigin="0.5,0.5" x:Name="path" Margin="4,0,0,0">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="270"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <Path Stretch="Fill" Stroke="{DynamicResource {x:Static res:CustomResources.LabelHighlightBrushKey}}" Data="M3.0625,11.5625 L7.03125,7.59375 10.937254,11.499754" 
                              Width="8" Height="4" RenderTransformOrigin="0.5,0.5" x:Name="path1" Margin="0,0,4,0">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="270"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <Border x:Name="hideBtnBorder" BorderBrush="Transparent" BorderThickness="1" 
                            Cursor="Hand" Background="Transparent" CornerRadius="2" Margin="0" 
                            VerticalAlignment="Center" HorizontalAlignment="Center" Width="20" Height="20" />
                        </Grid>
                    </ContentControl>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hideBtnBorder" Property="BorderBrush"
                                            Value="{DynamicResource {x:Static res:CustomResources.BorderBrushKey}}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="path1">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static res:CustomResources.DisabledForegroundBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SidebarButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static res:CustomResources.ButtonFocusVisualKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static res:CustomResources.ButtonNormalBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static res:CustomResources.BorderBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border Margin="0,0,0,0" x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <ContentPresenter HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static res:CustomResources.DarkNormalSolidBrush2Key}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static res:CustomResources.PressedSolidBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static res:CustomResources.PressedSolidBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static res:CustomResources.DisabledForegroundBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static res:CustomResources.ButtonFocusVisualKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static res:CustomResources.NormalGradientBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static res:CustomResources.BorderBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid Width="Auto" Background="Transparent">
                        <ContentPresenter Margin="{TemplateBinding Padding}" />
                        <Border x:Name="hideBtnBorder" BorderBrush="Transparent" BorderThickness="1" 
                            Cursor="Hand" Background="Transparent" CornerRadius="2" Margin="0" 
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="Auto" Height="Auto" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hideBtnBorder" Property="BorderBrush"
                                            Value="{DynamicResource {x:Static res:CustomResources.BorderBrushKey}}" />
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static res:CustomResources.DisabledForegroundBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ItemsPanelTemplate x:Key="OverflowPanelTemplate">
        <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal" HorizontalAlignment="Right"
                                ScrollViewer.CanContentScroll="False" />
    </ItemsPanelTemplate>

    <Style x:Key="MinimizedListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="IsSelected" Value="{Binding IsSelected}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
        <Setter Property="Visibility" Value="{Binding Path=ItemState, Converter={StaticResource NavItemsVisibilityConverter}, ConverterParameter=minimized}" />
        <Setter Property="Cursor" Value="{Binding Cursor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Width="25" Height="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{DynamicResource {x:Static res:CustomResources.ButtonNormalBrushKey}}">
                        <Border Margin="1,1,1,1" x:Name="border" Background="{x:Null}" BorderBrush="{x:Null}" ToolTip="{Binding Path=Header}"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="1" CornerRadius="2">
                            <Border x:Name="Bd" Width="Auto" Height="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                <Grid>
                                    <Image x:Name="image" Margin="1,0,0,0" Source="{Binding Path=Image}" Height="20" Width="20" VerticalAlignment="Center" HorizontalAlignment="Stretch" />
                                </Grid>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static res:CustomResources.ButtonSelectedBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static res:CustomResources.ButtonHoverBrushKey}}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static res:CustomResources.BorderBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource {x:Static res:CustomResources.TabItemDisabledBackgroundBrushKey}}" />
                            <Setter Property="Opacity" Value="0.5" TargetName="image" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static res:CustomResources.DisabledForegroundBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CollapsedListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="IsSelected" Value="{Binding IsSelected}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
        <Setter Property="Visibility" Value="{Binding Path=ItemState, Converter={StaticResource NavItemsVisibilityConverter}, ConverterParameter=collapsed}" />
        <Setter Property="Cursor" Value="{Binding Cursor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Padding="1" x:Name="border" Background="Transparent" BorderBrush="{x:Null}"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="1" CornerRadius="2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Image x:Name="image" Grid.Column="0" Margin="1,0,0,0" Source="{Binding Path=Image}" Height="20" Width="20" VerticalAlignment="Center" HorizontalAlignment="Stretch" />
                            <TextBlock Grid.Column="1" Margin="2,0,0,0" HorizontalAlignment="Stretch" Text="{Binding Path=Header}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static res:CustomResources.ButtonSelectedBrushKey}}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static res:CustomResources.BorderBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static res:CustomResources.ButtonHoverBrushKey}}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static res:CustomResources.BorderBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource {x:Static res:CustomResources.TabItemDisabledBackgroundBrushKey}}" />
                            <Setter Property="Opacity" Value="0.5" TargetName="image" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static res:CustomResources.DisabledForegroundBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MoreItemsBtnStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="border" 
                                Background="Transparent"
                                BorderBrush="{DynamicResource {x:Static res:CustomResources.BorderBrushKey}}"
                                FocusVisualStyle="{DynamicResource {x:Static res:CustomResources.ButtonFocusVisualKey}}"
                                BorderThickness="0"
                                CornerRadius="0,0,5,0">
                            <Grid>
                                <Path Data="{Binding Path=Data, Source={StaticResource MoreButtonArrow}}" 
                                  Fill="{StaticResource ArrowBrush}" 
                                  Width="7" Height="3.5"
                                  Stretch="Fill">
                                    <Path.Effect>
                                        <BlurEffect Radius="10" KernelType="Gaussian" />
                                    </Path.Effect>
                                </Path>
                                <Path Data="{Binding Path=Data, Source={StaticResource MoreButtonArrow}}" 
                                  Fill="White" 
                                  Width="7" Height="3.5"
                                  Stretch="Fill">
                                </Path>
                            </Grid>
                        </Border>

                        <local:CustomPopup x:Name="PART_Popup"
                                        IsOpen="{Binding Path=IsChecked, RelativeSource={RelativeSource TemplatedParent}}"
                                        StaysOpen="False"
                                        Placement="Right"
                                        AllowsTransparency="True">
                            <Border BorderThickness="1"
                                    BorderBrush="{DynamicResource {x:Static res:CustomResources.BorderBrushKey}}"
                                    Background="{DynamicResource {x:Static res:CustomResources.ButtonNormalBrushKey}}"
                                    Padding="1">
                                <ListBox x:Name="PART_CollapsedPanel" VerticalAlignment="Stretch" 
                                         ScrollViewer.CanContentScroll="False"
                                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                         ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                         Background="{DynamicResource {x:Static res:CustomResources.ButtonNormalBrushKey}}"
                                         Width="Auto" BorderThickness="0" SnapsToDevicePixels="True"
                                         ItemsSource="{Binding Path=Items, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NavigationPane}}}"
                                         ItemContainerStyle="{StaticResource CollapsedListBoxItemStyle}" />
                            </Border>
                        </local:CustomPopup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static res:CustomResources.ButtonSelectedBrushKey}}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="1,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static res:CustomResources.ButtonHoverBrushKey}}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="1,0,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="defaultNavigationPane" TargetType="{x:Type local:NavigationPane}">
        <Border CornerRadius="5,5,5,5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}"
                ClipToBounds="True">
            <Grid ClipToBounds="{TemplateBinding ClipToBounds}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0" 
                      KeyboardNavigation.TabNavigation="Local" x:Name="PART_RootPanel" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                           VerticalAlignment="{TemplateBinding VerticalAlignment}">
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="RowDefinition0" Height="*"/>
                    <RowDefinition x:Name="SplitterRowDefinition" Height="Auto"/>
                    <RowDefinition x:Name="RowDefinition1" MaxHeight="{Binding Path=ActualHeight, ElementName=PART_HeaderPanel}"/>
                    <RowDefinition x:Name="RowDefinition2" Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="ColumnDefinition0" Width="*" MinWidth="30"/>
                    <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                </Grid.ColumnDefinitions>
                <Grid x:Name="ContentPanel" Grid.Column="0" Grid.Row="0"
                                  KeyboardNavigation.DirectionalNavigation="Contained"
                                  KeyboardNavigation.TabIndex="2"
                                  KeyboardNavigation.TabNavigation="Local">
                    <Border CornerRadius="5,5,0,0">
                        <DockPanel SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                           Margin="{TemplateBinding Padding}"
                                   Background="Transparent">
                            <Grid Height="33" DockPanel.Dock="Top" Margin="0" x:Name="PART_NavigationPaneHeaderHost" Background="Transparent">
                                <Border Background="{DynamicResource {x:Static res:CustomResources.BackgroundGradientBrushKey}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1" CornerRadius="5,5,0,0" >
                                    <DockPanel x:Name="PART_Content" LastChildFill="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}">
                                        <ToggleButton x:Name="PART_ToggleViewButton" DockPanel.Dock="Right" Width="27" Style="{StaticResource DoubleArrowToggleButtonStyle}" RenderTransformOrigin="0.5,0.5" 
                                                      IsChecked="{Binding Path=IsToggleViewChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                      TabIndex="0">
                                            <ToggleButton.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                    <SkewTransform AngleX="0" AngleY="0"/>
                                                    <RotateTransform Angle="0"/>
                                                    <TranslateTransform X="0" Y="0"/>
                                                </TransformGroup>
                                            </ToggleButton.RenderTransform>
                                        </ToggleButton>
                                        <Button DockPanel.Dock="Right" Width="22" Height="22" x:Name="PART_SettingsButton" Visibility="{TemplateBinding SettingsButtonVisibility}"
                                                Style="{StaticResource ButtonStyle}" ToolTip="{TemplateBinding SettingsTooltip}"
                                                TabIndex="1">
                                            <Image Source="/Eagle.Windows;component/Images/Settings2.png" Margin="1" />
                                        </Button>
                                        <Image x:Name="PART_Image" Margin="5,0,0,0" Width="20" Height="20" Source="{TemplateBinding HeaderImage}" DockPanel.Dock="Left"
                                               Visibility="{TemplateBinding HeaderImageVisibility}"/>
                                        <TextBlock x:Name="PART_Header" Foreground="{DynamicResource {x:Static res:CustomResources.LabelHighlightBrushKey}}" 
                                                       FontSize="18" FontFamily="Segoe UI" TextWrapping="NoWrap" VerticalAlignment="Center" 
                                                       HorizontalAlignment="Left" Margin="5,0,0,0" Text="{TemplateBinding Header}" TextTrimming="CharacterEllipsis" />
                                    </DockPanel>
                                </Border>
                            </Grid>
                            <DockPanel Visibility="Collapsed" HorizontalAlignment="Left" Margin="1,0,1,1" x:Name="PART_SideBar" VerticalAlignment="Stretch" Height="30" LastChildFill="True">
                                <DockPanel.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="-90"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </DockPanel.LayoutTransform>
                                <ToggleButton x:Name="PART_SideBarButton" Style="{StaticResource SidebarButtonStyle}" 
                                              Content="{TemplateBinding Header}" Background="{DynamicResource {x:Static res:CustomResources.SideBarBackgroundBrushKey}}" 
                                              BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Margin="1,-1,1,-1" FontSize="13" FontWeight="Bold" Foreground="{TemplateBinding Foreground}" DockPanel.Dock="Top" 
                                              TabIndex="2"/>
                            </DockPanel>

                            <ContentPresenter DockPanel.Dock="Top" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" SnapsToDevicePixels="True" Width="Auto" Height="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                        </DockPanel>
                    </Border>
                </Grid>
                <Border x:Name="mask" Grid.Row="2" Background="{TemplateBinding Background}" CornerRadius="0,0,5,5"/>
                <GridSplitter x:Name="PART_HGridSplitter" DragIncrement="32" Height="6" Margin="0,0,0,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,0" Background="{DynamicResource {x:Static res:CustomResources.HSplitterBackgroundBrushKey}}" 
                              Focusable="False" Grid.Row="1" 
                              VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <GridSplitter.Visibility>
                        <MultiBinding Converter="{StaticResource FixedNavigationItemsConverter}">
                            <Binding Path="DockItemsPanelVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="NavigationItemsFixed" RelativeSource="{RelativeSource TemplatedParent}" />
                        </MultiBinding>
                    </GridSplitter.Visibility>
                </GridSplitter>
                <Line Grid.Row="1" Stroke="{TemplateBinding BorderBrush}" 
                      VerticalAlignment="Top" Stretch="Fill" 
                      X2="1" SnapsToDevicePixels="True"
                      x:Name="lineSplitter">
                    <Line.Visibility>
                        <MultiBinding Converter="{StaticResource FixedNavigationItemsConverter}">
                            <Binding Path="DockItemsPanelVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="NavigationItemsFixed" RelativeSource="{RelativeSource TemplatedParent}" />
                        </MultiBinding>
                    </Line.Visibility>
                </Line>
                <Border Background="{DynamicResource {x:Static res:CustomResources.ButtonNormalBrushKey}}" 
                                       Height="{Binding Path=ActualHeight, ElementName=PART_HeaderPanel}" 
                                       BorderBrush="{TemplateBinding BorderBrush}"
                                       BorderThickness="0,1,0,1"
                                       CornerRadius="0,0,5,5" Visibility="Collapsed"
                                       x:Name="rect"
                                       Grid.Row="2" Margin="0,0,0,0"
                                       VerticalAlignment="Top"
                                       />
                <StackPanel x:Name="PART_HeaderPanel" Width="Auto" Height="Auto" IsItemsHost="True"
                                        Background="{x:Null}" Grid.Row="2" SnapsToDevicePixels="True" 
                                        VerticalAlignment="Top" MaxHeight="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NavHeaderMaxHeightConverter}}">
                </StackPanel>
                <Border x:Name="PART_OverflowBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Height="32" Padding="0,2,0,2"
                                 Width="Auto" Grid.Row="3" Background="{DynamicResource {x:Static res:CustomResources.ButtonNormalBrushKey}}"
                                 SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,0" CornerRadius="0,0,5,5">
                    <Border.Visibility>
                        <MultiBinding Converter="{StaticResource FixedNavigationItemsConverter}">
                            <Binding Path="DockItemsPanelVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="NavigationItemsFixed" RelativeSource="{RelativeSource TemplatedParent}" />
                        </MultiBinding>
                    </Border.Visibility>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Background="Transparent">
                        <ListBox x:Name="PART_OverflowPanel" VerticalAlignment="Stretch" 
                                 ScrollViewer.CanContentScroll="False"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                 Width="Auto" BorderThickness="0" SnapsToDevicePixels="True"
                                 Background="{DynamicResource {x:Static res:CustomResources.ButtonNormalBrushKey}}"
                                 ItemsPanel="{StaticResource OverflowPanelTemplate}"
                                 ItemsSource="{Binding Path=Items, RelativeSource={RelativeSource TemplatedParent}}"
                                 ItemContainerStyle="{StaticResource MinimizedListBoxItemStyle}"
                                 TabIndex="3">
                        </ListBox>
                        <ToggleButton x:Name="PART_MoreItemsButton" 
                                Style="{StaticResource MoreItemsBtnStyle}"
                                Width="20" 
                                Margin="0,-2,0,-2"/>
                    </StackPanel>
                </Border>
                <Popup x:Name="PART_QuickPopup" Placement="Right" AllowsTransparency="True" StaysOpen="False" IsOpen="{Binding Path=IsChecked, ElementName=PART_SideBarButton, Mode=TwoWay}" PopupAnimation="Fade"
                                   MaxHeight="{Binding ElementName=PART_SideBarButton, Mode=OneWay, Path=ActualHeight}"
                                   MaxWidth="300">
                    <Microsoft_Windows_Themes:SystemDropShadowChrome Width="Auto" Height="Auto" x:Name="Shdw" Color="#00ffffff">
                        <Grid Width="{Binding Path=Width, ElementName=PART_QuickPopup}" Height="{Binding Path=Height, ElementName=PART_QuickPopup}" SnapsToDevicePixels="True">
                            <Border BorderThickness="1,1,1,1" BorderBrush="{DynamicResource {x:Static res:CustomResources.BorderBrushKey}}"
                                     Background="{DynamicResource {x:Static res:CustomResources.SideBarBackgroundBrushKey}}" x:Name="OuterBorder">
                                <Border x:Name="_quickPopupContainer" BorderBrush="{DynamicResource {x:Static res:CustomResources.BorderBrushKey}}" Width="Auto" Height="Auto" BorderThickness="1,1,1,1" Margin="4" Background="#FFFFFFFF">
                                    <ContentPresenter Content="{TemplateBinding SelectedContent}"
                                                  ContentSource="SelectedContent"
                                                  ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding SelectedContentTemplate}"/>
                                </Border>
                            </Border>
                            <ResizeGrip Margin="0,0,7,7" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
                        </Grid>
                    </Microsoft_Windows_Themes:SystemDropShadowChrome>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_QuickPopup" Value="True">
                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
            </Trigger>
            <Trigger Property="IsCollapsable" Value="False">
                <Setter Property="Visibility" TargetName="PART_ToggleViewButton" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="DockItemsPanelVisibility" Value="Collapsed">
                <Setter Property="MinHeight" Value="0" TargetName="RowDefinition2" />
                <Setter Property="Height" Value="0" TargetName="RowDefinition2" />
                <Setter Property="Height" Value="0" TargetName="SplitterRowDefinition" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True" SourceName="PART_ToggleViewButton">
                <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Image" />
                <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Header" />
                <Setter Property="Visibility" Value="Visible" TargetName="PART_SideBar" />
                <!--<Setter TargetName="PART_HeaderPanel" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_OverflowBorder" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_HGridSplitter" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="mask" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="lineSplitter" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="ContentPanel" Property="Grid.RowSpan" Value="4" />-->
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter Property="Grid.Row"
                        TargetName="ContentPanel" Value="0"/>
                <Setter Property="Height"
                            TargetName="RowDefinition0" Value="*"/>
                <Setter Property="Height"
                            TargetName="RowDefinition1" Value="Auto"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter Property="Grid.Row"
                            TargetName="ContentPanel" Value="0"/>
                <Setter Property="Grid.Column"
                            TargetName="ContentPanel" Value="1"/>
                <Setter Property="Width"
                            TargetName="ColumnDefinition0" Value="Auto"/>
                <Setter Property="Width"
                            TargetName="ColumnDefinition1" Value="*"/>
                <Setter Property="Height"
                            TargetName="RowDefinition0" Value="*"/>
                <Setter Property="Height"
                            TargetName="RowDefinition1" Value="0"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter Property="Grid.Row"
                            TargetName="ContentPanel" Value="0"/>
                <Setter Property="Grid.Column"
                            TargetName="ContentPanel" Value="0"/>
                <Setter Property="Width"
                            TargetName="ColumnDefinition0" Value="*"/>
                <Setter Property="Width"
                            TargetName="ColumnDefinition1" Value="Auto"/>
                <Setter Property="Height"
                            TargetName="RowDefinition0" Value="*"/>
                <Setter Property="Height"
                            TargetName="RowDefinition1" Value="0"/>
            </Trigger>
            <Trigger Property="ViewMode" Value="TabMode">
                <Setter Property="Orientation" Value="Horizontal" TargetName="PART_HeaderPanel" />
                <Setter Property="Visibility" Value="Visible" TargetName="rect" />
            </Trigger>
            <Trigger Property="NavigationItemsFixed" Value="True">
                <Setter Property="OpacityMask" TargetName="PART_HeaderPanel">
                    <Setter.Value>
                        <VisualBrush Visual="{Binding ElementName=mask}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ViewMode" Value="TabMode" />
                    <Condition Property="IsChecked" Value="True" SourceName="PART_ToggleViewButton" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" Value="Collapsed" TargetName="PART_HeaderPanel" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground"
                            Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="HeaderImage" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="PART_Image" Value="Collapsed" />
            </Trigger>
            <Trigger Property="PanePlacement" Value="Right">
                <Setter Property="DockPanel.Dock" Value="Left" TargetName="PART_ToggleViewButton" />
                <Setter Property="RenderTransform" TargetName="PART_ToggleViewButton">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                            <SkewTransform AngleX="0" AngleY="0"/>
                            <RotateTransform Angle="180"/>
                            <TranslateTransform X="0" Y="0"/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="tabWithoutHeaderNavigationPane" TargetType="{x:Type local:NavigationPane}">
        <Border CornerRadius="0,0,5,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" 
                Background="{TemplateBinding Background}"
                            ClipToBounds="True">
            <Grid ClipToBounds="{TemplateBinding ClipToBounds}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0" 
                      KeyboardNavigation.TabNavigation="Local" x:Name="PART_RootPanel" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                           VerticalAlignment="{TemplateBinding VerticalAlignment}">
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="RowDefinition0" Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="ColumnDefinition0" Width="*" MinWidth="30"/>
                    <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                </Grid.ColumnDefinitions>
                <Grid x:Name="ContentPanel" Grid.Column="0" Grid.Row="0"
                                  KeyboardNavigation.DirectionalNavigation="Contained"
                                  KeyboardNavigation.TabIndex="2"
                                  KeyboardNavigation.TabNavigation="Local">
                    <Border CornerRadius="5,5,0,0">
                        <DockPanel SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                           Margin="{TemplateBinding Padding}" Background="Transparent">
                            <Grid DockPanel.Dock="Right">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="27"/>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid x:Name="PART_NavigationPaneHeaderHost" Background="Transparent"
                                      Grid.Row="0">
                                    <Border Background="{DynamicResource {x:Static res:CustomResources.BackgroundGradientBrushKey}}" BorderBrush="{TemplateBinding BorderBrush}" 
                                            BorderThickness="0,0,0,1" CornerRadius="0">
                                    </Border>
                                    <DockPanel x:Name="PART_Content" LastChildFill="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}">
                                        <ToggleButton x:Name="PART_ToggleViewButton" DockPanel.Dock="Left" Width="27" Style="{StaticResource DoubleArrowToggleButtonStyle}" RenderTransformOrigin="0.5,0.5" 
                                                      IsChecked="{Binding Path=IsToggleViewChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                      Height="27"
                                                      TabIndex="0">
                                            <ToggleButton.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                    <SkewTransform AngleX="0" AngleY="0"/>
                                                    <RotateTransform Angle="0"/>
                                                    <TranslateTransform X="0" Y="0"/>
                                                </TransformGroup>
                                            </ToggleButton.RenderTransform>
                                        </ToggleButton>
                                    </DockPanel>
                                </Grid>
                                <Grid Grid.Row="1" x:Name="PART_SideBar"                                      
                                      Height="28"
                                      Background="#FFC6E6FF">
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="-90"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <ToggleButton x:Name="PART_SideBarButton" Style="{StaticResource SidebarButtonStyle}" 
                                                            Content="{TemplateBinding Header}" Background="{DynamicResource {x:Static res:CustomResources.SideBarBackgroundBrushKey}}" 
                                                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" 
                                                  Margin="1,-1,1,-1" FontSize="13" FontWeight="Bold" Foreground="{TemplateBinding Foreground}" DockPanel.Dock="Top" 
                                              Visibility="Collapsed"
                                                  TabIndex="1"/>
                                    <StackPanel x:Name="PART_HeaderPanel" IsItemsHost="True"
                                            Background="{x:Null}" Orientation="Horizontal" HorizontalAlignment="Right"
                                            Margin="0,-3,0,0"
                                            VerticalAlignment="Bottom" FlowDirection="RightToLeft"/>

                                </Grid>
                            </Grid>
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" SnapsToDevicePixels="True"/>
                        </DockPanel>
                    </Border>
                </Grid>
                <GridSplitter x:Name="PART_HGridSplitter" DragIncrement="32" Height="6" Margin="0,0,0,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,0" Background="{DynamicResource {x:Static res:CustomResources.HSplitterBackgroundBrushKey}}" 
                                      Focusable="False"
                                      Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Visibility="Collapsed" />
                <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Padding="0,2,0,2"
                                 Width="Auto" Grid.Row="3" Background="{DynamicResource {x:Static res:CustomResources.ButtonNormalBrushKey}}"
                                 SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,1" Visibility="Collapsed" CornerRadius="0,0,5,5">
                    <ListBox x:Name="PART_OverflowPanel" VerticalAlignment="Stretch"
                             ScrollViewer.CanContentScroll="False"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             ScrollViewer.VerticalScrollBarVisibility="Disabled"
                             Width="Auto" BorderThickness="0" SnapsToDevicePixels="True"
                             Background="{DynamicResource {x:Static res:CustomResources.ButtonNormalBrushKey}}"
                             ItemsPanel="{StaticResource OverflowPanelTemplate}" 
                             ItemsSource="{Binding Path=Items, RelativeSource={RelativeSource TemplatedParent}}"
                             TabIndex="2">
                    </ListBox>
                </Border>
                <Popup x:Name="PART_QuickPopup" Placement="Right" AllowsTransparency="True" StaysOpen="False" IsOpen="{Binding Path=IsChecked, ElementName=PART_SideBarButton, Mode=TwoWay}" PopupAnimation="Fade"
                                   MaxHeight="{Binding ElementName=PART_SideBarButton, Mode=OneWay, Path=ActualHeight}"
                                   MaxWidth="300">
                    <Microsoft_Windows_Themes:SystemDropShadowChrome Width="Auto" Height="Auto" x:Name="Shdw" Color="#00ffffff">
                        <Grid Width="{Binding Path=Width, ElementName=PART_QuickPopup}" Height="{Binding Path=Height, ElementName=PART_QuickPopup}" SnapsToDevicePixels="True">
                            <Border BorderThickness="1,1,1,1" BorderBrush="{DynamicResource {x:Static res:CustomResources.BorderBrushKey}}"
                                     Background="{DynamicResource {x:Static res:CustomResources.SideBarBackgroundBrushKey}}" x:Name="OuterBorder">
                                <Border x:Name="_quickPopupContainer" BorderBrush="{DynamicResource {x:Static res:CustomResources.BorderBrushKey}}" Width="Auto" Height="Auto" BorderThickness="1,1,1,1" Margin="4" Background="#FFFFFFFF">
                                    <ContentPresenter Content="{TemplateBinding SelectedContent}"
                                                  ContentSource="SelectedContent"
                                                  ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding SelectedContentTemplate}"/>
                                </Border>
                            </Border>
                            <ResizeGrip Margin="0,0,7,7" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
                        </Grid>
                    </Microsoft_Windows_Themes:SystemDropShadowChrome>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_QuickPopup" Value="True">
                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
            </Trigger>
            <Trigger Property="IsCollapsable" Value="False">
                <Setter Property="Visibility" TargetName="PART_ToggleViewButton" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True" SourceName="PART_ToggleViewButton">
                <Setter Property="Visibility" Value="Visible" TargetName="PART_SideBarButton" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground"
                            Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="HeaderImage" Value="{x:Null}">
            </Trigger>
            <Trigger Property="PanePlacement" Value="Right">
                <Setter Property="RenderTransform" TargetName="PART_ToggleViewButton">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                            <SkewTransform AngleX="0" AngleY="0"/>
                            <RotateTransform Angle="180"/>
                            <TranslateTransform X="0" Y="0"/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:NavigationPane}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static res:CustomResources.CaptionBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static res:CustomResources.BorderBrushKey}}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsCollapsable" Value="True"/>
        <Setter Property="DockItemsPanelVisibility" Value="Visible" />
        <Setter Property="HeaderImageVisibility" Value="Collapsed" />
        <Setter Property="ViewMode" Value="PaneMode" />
        <Setter Property="SettingsButtonVisibility" Value="Collapsed" />
        <Setter Property="Template" Value="{StaticResource defaultNavigationPane}" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type local:NavigationPaneItem}">
                    <Setter Property="Header" Value="{Binding Path=Header}"/>
                    <Setter Property="Content" Value="{Binding Path=Content}"/>
                    <Setter Property="ContentTemplate" Value="{Binding}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ViewMode" Value="TabWithoutHeaderMode">
                <Setter Property="Template" Value="{StaticResource tabWithoutHeaderNavigationPane}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="tabWithoutHeaderNavigationPaneItem" TargetType="{x:Type local:NavigationPaneItem}">
        <Border Cursor="{TemplateBinding Cursor}" MinHeight="32" 
                        x:Name="border" SnapsToDevicePixels="True"                           
                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,0"
                        Margin="0,0,0,1"
                        CornerRadius="0"  >

            <Border.Background>
                <LinearGradientBrush EndPoint="0.559,0.195" StartPoint="0.559,0.823">
                    <GradientStop Color="#FF418CC9" Offset="0"/>
                    <GradientStop Color="#FF0B5A9A" Offset="1"/>
                </LinearGradientBrush>

            </Border.Background>
            <Grid>
                <ContentPresenter Cursor="Hand" Margin="5,0,5,0" x:Name="contentPresenter" VerticalAlignment="Center" 
                                          TextElement.FontFamily="Segoe UI" TextElement.FontSize="12" 
                                          TextElement.Foreground="White" HorizontalAlignment="Center">
                    <ContentPresenter.Content>
                        <TextBlock  Text="{TemplateBinding Header}" TextTrimming="CharacterEllipsis"/>
                    </ContentPresenter.Content>
                </ContentPresenter>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static res:CustomResources.ButtonNormalBrushKey}}"/>
                <Setter Property="Margin" Value="0"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            </MultiTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"/>
                <Setter Property="Margin" Value="0,0,0,0"/>
                <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static SystemColors.DesktopBrushKey}}"/>-->
                <Setter Property="Background" TargetName="border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.559,-0.35" StartPoint="0.559,1.39">
                            <GradientStop Color="#FFD5EDB2" Offset="0.009"/>
                            <GradientStop Color="#FF9BBC6A" Offset="1"/>
                            <GradientStop Color="#FFACCE7C" Offset="0.527"/>
                            <GradientStop Color="#FFC3DF9A" Offset="0.483"/>
                        </LinearGradientBrush>
                    </Setter.Value>

                </Setter>
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static res:CustomResources.CaptionBrushKey}}"/>
                <Setter Property="Margin" Value="0"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static res:CustomResources.ButtonPressedBrushKey}}"/>
            </MultiTrigger>
            <Trigger Property="Image" Value="{x:Null}"/>
            <Trigger Property="ViewMode" Value="TabMode">
                <Setter Property="BorderThickness" TargetName="border" Value="1,1,1,1"/>
                <Setter Property="Margin" TargetName="border" Value="0"/>
                <Setter Property="CornerRadius" TargetName="border" Value="0"/>
                <Setter Property="MinHeight" TargetName="border" Value="25"/>
                <Setter Property="MaxHeight" TargetName="border" Value="25"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="ViewMode" Value="TabMode"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                <Setter Property="Margin" TargetName="border" Value="0"/>
                <Setter Property="MinHeight" TargetName="border" Value="28"/>
                <Setter Property="MaxHeight" TargetName="border" Value="28"/>
                <Setter Property="CornerRadius" TargetName="border" Value="0"/>
            </MultiTrigger>
            <Trigger Property="ViewMode" Value="TabWithoutHeaderMode">
                <Setter Property="BorderThickness" TargetName="border" Value="1,1,1,1"/>
                <Setter Property="Margin" TargetName="border" Value="0"/>
                <Setter Property="CornerRadius" TargetName="border" Value="0"/>
                <Setter Property="MinHeight" TargetName="border" Value="24"/>
                <Setter Property="MaxHeight" TargetName="border" Value="24"/>
                <Setter Property="Margin" TargetName="contentPresenter" Value="0"/>
                <Setter Property="MinWidth" Value="70"/>

                <Setter Property="LayoutTransform">                    
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                            <SkewTransform AngleX="0" AngleY="0"/>
                            <RotateTransform Angle="180"/>
                            <TranslateTransform X="0" Y="0"/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="ViewMode" Value="TabWithoutHeaderMode"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                <Setter Property="Margin" TargetName="border" Value="0"/>
                <Setter Property="MinHeight" TargetName="border" Value="28"/>
                <Setter Property="MaxHeight" TargetName="border" Value="28"/>
                <Setter Property="CornerRadius" TargetName="border" Value="0"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static res:CustomResources.TabItemDisabledBackgroundBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static res:CustomResources.DisabledForegroundBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <LinearGradientBrush x:Key="NavItemBusinessElement"  StartPoint="0, 0" EndPoint="0,1">
        <GradientStop Color="#FFB5BBBF" Offset="0"/>
        <GradientStop Color="#FF98A8B5" Offset="0.482"/>
        <GradientStop Color="#FF909FAB" Offset="0.518"/>
        <GradientStop Color="#FF91A4B3" Offset="1"/>
    </LinearGradientBrush>


    <ControlTemplate x:Key="defaultNavigationPaneItem" TargetType="{x:Type local:NavigationPaneItem}">
        <!-- This defines the look of the individual NavigationPane Item -->
        <Border x:Name="border" 
                Background="{TemplateBinding Background}"  
                MinHeight="32" 
                SnapsToDevicePixels="True" 
                Cursor="{TemplateBinding Cursor}"
                BorderBrush="{TemplateBinding BorderBrush}"                            
                BorderThickness="0">
            <Grid>
                <Image x:Name="PART_Image" Width="20" Height="20" Margin="5,0,0,0" Source="{TemplateBinding Image}" HorizontalAlignment="Left" ToolTip="{TemplateBinding Header}"
                       ToolTipService.ShowOnDisabled="True"/>
                <Line x:Name="line1" Stroke="{TemplateBinding BorderBrush}" VerticalAlignment="Top" Stretch="Fill" X2="1" SnapsToDevicePixels="True" />
                <!--<Line x:Name="line2" Stroke="{TemplateBinding BorderBrush}" HorizontalAlignment="Right" Stretch="Fill" Y1="1" SnapsToDevicePixels="True" />-->
                <ContentPresenter Margin="28,0,5,0" TextBlock.FontFamily="Segoe UI" TextBlock.FontSize="13" TextBlock.Foreground="{TemplateBinding Foreground}" Cursor="Hand" 
                                              VerticalAlignment="Center"
                                              x:Name="contentPresenter">
                    <ContentPresenter.Content>
                        <TextBlock Text="{TemplateBinding Header}" TextTrimming="CharacterEllipsis" />
                    </ContentPresenter.Content>
                </ContentPresenter>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsBusinessElementNavigationItem" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static res:CustomResources.ButtonNormalBrushKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsBusinessElementNavigationItem" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource NavItemBusinessElement}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static res:CustomResources.ButtonHoverBrushKey}}" />
            </MultiTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static res:CustomResources.ButtonSelectedBrushKey}}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static res:CustomResources.CaptionBrushKey}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource {x:Static res:CustomResources.ButtonPressedBrushKey}}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="Image" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="PART_Image" Value="Hidden" />
            </Trigger>
            <Trigger Property="ViewMode" Value="TabMode">
                <Setter Property="BorderThickness" Value="1" TargetName="border" />
                <Setter Property="Margin" Value="3,1,0,2" TargetName="border"/>
                <Setter Property="Visibility" Value="Collapsed" TargetName="line1" />
                <Setter Property="CornerRadius" TargetName="border" Value="3,3,3,3"/>
                <Setter Property="MinHeight" TargetName="border" Value="25"/>
                <Setter Property="MaxHeight" TargetName="border" Value="25"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="ViewMode" Value="TabMode" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value="1,0,1,1" TargetName="border" />
                <Setter Property="Margin" Value="3,-3,0,2" TargetName="border"/>
                <Setter Property="MinHeight" TargetName="border" Value="28"/>
                <Setter Property="MaxHeight" TargetName="border" Value="28"/>
                <Setter Property="CornerRadius" TargetName="border" Value="0,0,3,3"/>
            </MultiTrigger>
            <Trigger Property="ViewMode" Value="TabWithoutHeaderMode">
                <Setter Property="BorderThickness" Value="1" TargetName="border" />
                <Setter Property="Margin" Value="3,2,0,3" TargetName="border"/>
                <Setter Property="Visibility" Value="Collapsed" TargetName="line1" />
                <Setter Property="CornerRadius" TargetName="border" Value="3,3,1,1"/>
                <Setter Property="MinHeight" TargetName="border" Value="24"/>
                <Setter Property="MaxHeight" TargetName="border" Value="24"/>
                <Setter Property="Visibility" TargetName="PART_Image" Value="Collapsed" />
                <Setter Property="Margin" TargetName="contentPresenter" Value="5,0,5,0" />
                <Setter Property="MinWidth" Value="70" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="ViewMode" Value="TabWithoutHeaderMode" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value="1,1,1,1" TargetName="border" />
                <Setter Property="Margin" Value="3,2,0,-2" TargetName="border"/>
                <Setter Property="MinHeight" TargetName="border" Value="28"/>
                <Setter Property="MaxHeight" TargetName="border" Value="28"/>
                <Setter Property="CornerRadius" TargetName="border" Value="3,3,0,0"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static res:CustomResources.TabItemDisabledBackgroundBrushKey}}" />
                <Setter Property="Opacity" Value="0.5" TargetName="PART_Image" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static res:CustomResources.DisabledForegroundBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:NavigationPaneItem}">
        <Setter Property="Padding" Value="2,2,2,2"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static res:CustomResources.CaptionBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static res:CustomResources.BorderBrushKey}}" />
        <Setter Property="Height" Value="32" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="ViewMode" Value="{Binding Path=ViewMode, RelativeSource={RelativeSource AncestorType={x:Type local:NavigationPane}}, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="Template" Value="{StaticResource defaultNavigationPaneItem}" />
        <Style.Triggers>
            <Trigger Property="ViewMode" Value="TabWithoutHeaderMode">
                <Setter Property="Template" Value="{StaticResource tabWithoutHeaderNavigationPaneItem}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
