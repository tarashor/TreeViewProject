<Window x:Class="TreeViewProject.Views.Shell"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:theme="clr-namespace:ThemesPack;assembly=ThemesPack"
        xmlns:vm="clr-namespace:TreeViewProject.ViewModels"
        xmlns:local="clr-namespace:TreeViewProject.Views"
        xmlns:conv="clr-namespace:TreeViewProject.Converters"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        Title="Shell" Height="300" Width="300"
        WindowStyle="None"
        WindowState="Maximized"
        >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="OrgChartTreeViewItemStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <conv:NullToVisibilityConverter x:Key="NullToVisibility"/>
            <Style x:Key="AnimationBorder" TargetType="Border">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#FFD0E1F5"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Height" Value="15"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.5" Storyboard.TargetProperty="Height" To="80"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.5" Storyboard.TargetProperty="Height" To="20"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <SolidColorBrush x:Key="HeaderBrush" Color="#5280BC"/>
            <SolidColorBrush x:Key="DetailedViewHeaderBrush" Color="#FF769BCB"/>

            <SolidColorBrush x:Key="asadsad" Color="#FFADD8"/>

            <LinearGradientBrush x:Key="TreeBackground" StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                    <GradientStop Color="#F3C04A" Offset="0" />
                    <GradientStop Color="#E9890A" Offset="1" />
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="WindowBackground" StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                    <GradientStop Color="#FFE8F1FF" Offset="1"/>
                    <GradientStop Color="#FFFFFFFF" Offset="0"/>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>


            <Style TargetType="TextBlock" x:Key="TrimmingTextBlock">
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                <Setter Property="ToolTipService.IsEnabled" Value="True" />
                <Setter Property="ToolTip" Value="{Binding Text, RelativeSource={RelativeSource Mode=Self}}" />
                <Style.Triggers>
                    <Trigger Property="Text" Value="{x:Null}">
                        <Setter Property="ToolTipService.IsEnabled" Value="False"/>
                    </Trigger>
                    <Trigger Property="Text">
                        <Trigger.Value>
                            <x:Static Member="System:String.Empty" />
                        </Trigger.Value>
                        <Setter Property="ToolTipService.IsEnabled" Value="False"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="TextBlock" x:Key="HeaderText">
                <Setter Property="Foreground" Value="{StaticResource HeaderBrush}"/>
                <Setter Property="Margin" Value="3" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontSize" Value="14" />
            </Style>

            <Style TargetType="TextBlock" x:Key="ValueText" BasedOn="{StaticResource TrimmingTextBlock}">
                <Setter Property="Margin" Value="3" />

            </Style>

            <DataTemplate x:Key="TreeDataTemplate" DataType="{x:Type vm:Tree}">
                <Border CornerRadius="2" Name="MainBorder" Background="{StaticResource TreeBackground}" Margin="5" MinWidth="120">
                    <StackPanel>
                        <TextBlock Style="{StaticResource TrimmingTextBlock}" Foreground="White" FontSize="12" FontWeight="Bold" HorizontalAlignment="Center" Text="{Binding Name}"/>
                        <Border CornerRadius="2" Background="White" Opacity="0.8" Margin="3">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Style="{StaticResource ValueText}" FontStyle="Italic" Text="Nodes"/>
                                <TextBlock Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right" Style="{StaticResource ValueText}" FontWeight="Bold"   Text="{Binding NodesCount}"/>
                            </Grid>
                        </Border>
                    </StackPanel>
                </Border>
            </DataTemplate>

            <Style x:Key="ItemStyle" TargetType="{x:Type ListBoxItem}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Margin" Value="3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Name="selectionBorder" CornerRadius="4" HorizontalAlignment="Stretch" VerticalAlignment="Top" 
                                BorderBrush="Transparent" Background="Transparent" BorderThickness="1">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="selectionBorder" >
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0, 0" EndPoint="0,1">
                                                <GradientStop Color="#FFF5FBFF" Offset="0"/>
                                                <GradientStop Color="#FFD1E4F3" Offset="1"/>
                                                <GradientStop Color="#FFD0DFEB" Offset="0.518"/>
                                                <GradientStop Color="#FFD8E8F5" Offset="0.482"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="BorderBrush" TargetName="selectionBorder" >
                                        <Setter.Value>
                                            <SolidColorBrush Color="#FFB1C4D3"/>
                                        </Setter.Value>
                                    </Setter>

                                </Trigger>

                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" TargetName="selectionBorder" >
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0, 0" EndPoint="0,1">
                                                <GradientStop Color="#FFF5FBFF" Offset="0"/>
                                                <GradientStop Color="#FFAACEE9" Offset="1"/>
                                                <GradientStop Color="#FFBFD3E3" Offset="0.518"/>
                                                <GradientStop Color="#FFC2DBEF" Offset="0.482"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="BorderBrush" TargetName="selectionBorder" >
                                        <Setter.Value>
                                            <SolidColorBrush Color="#FF81B6DF"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Grid" x:Key="DetailedView">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform CenterX="0" CenterY="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type local:Shell}}}" />
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Visibility" Value="Visible">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From="0"
                                                         To="1" Duration="0:0:0.2" FillBehavior="HoldEnd"/>
                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                         To="1" Duration="0:0:0.2" FillBehavior="HoldEnd" From="0"/>
                                </Storyboard>

                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <DataTemplate DataType="{x:Type vm:NewTreeViewModel}">
                <Grid Width="400" Height="300">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <StackPanel HorizontalAlignment="Stretch" Margin="10" VerticalAlignment="Center">
                        <TextBlock Text="Name of the tree:"/>
                        <TextBox  Text="{Binding NewTreeName, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Right">
                        <Button Style="{DynamicResource {x:Static theme:CustomResources.NormalButtonStyleKey}}" VerticalAlignment="Top" Margin="10" Command="{Binding SaveCommand}">Save</Button>
                        <Button Style="{DynamicResource {x:Static theme:CustomResources.NormalButtonStyleKey}}" VerticalAlignment="Top" Margin="10" Command="{Binding CloseCommand}">Cancel</Button>
                    </StackPanel>
                </Grid>

            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Background="{StaticResource WindowBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border Background="{StaticResource DetailedViewHeaderBrush}">
            <Grid>
                <TextBlock HorizontalAlignment="Left" 
                           VerticalAlignment="Center" 
                           Foreground="White"
                           FontWeight="Bold"
                           FontSize="16"
                           Text="Tree Viewer"
                           Margin="5"
                           />
                <Button Command="{Binding CloseCommand}" 
                    HorizontalAlignment="Right"
                    Margin="7" 
                    Background="{x:Null}" 
                    BorderBrush="{x:Null}" 
                    Style="{DynamicResource {x:Static theme:CustomResources.ButtonWithBorderGlowTemplateKey}}" 
                    Width="20" Height="20" x:Name="PART_CloseButton" ToolTip="Close" Focusable="False" IsTabStop="False">
                    <Path Data="M0.5,0.5 L18.5,18.5 M 18.5,0.5 L 0.5,18.5" Stretch="Uniform" StrokeThickness="3" Stroke="White" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Button>
            </Grid>
        </Border>
        <Grid Grid.Row="1">
            <GroupBox Header="Trees" Margin="50, 50, 50, 100" Name="groupBox1" BorderThickness="2" >
                <Grid>
                    <ListBox Name="ListTrees"  ItemsSource="{Binding Trees}"
                             BorderThickness="0"
                             Background="Transparent"
                             ItemContainerStyle="{StaticResource ItemStyle}"
                             ItemTemplate="{StaticResource TreeDataTemplate}"
                         />
                </Grid>
            </GroupBox>
            <Border Style="{StaticResource AnimationBorder}"
                    CornerRadius="5,5,0,0" 
                    BorderBrush="DarkGray" 
                    BorderThickness="1" 
                    VerticalAlignment="Bottom" 
                    Margin="20,20,20,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="ToolBox" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                    <Border Grid.Row="1" CornerRadius="0" BorderBrush="Gray" Background="#FFE3EDF9" Margin="2">
                        <StackPanel Orientation="Horizontal">
                            <Button Style="{DynamicResource {x:Static theme:CustomResources.NormalButtonStyleKey}}" VerticalAlignment="Top" Margin="10" Command="{Binding NewTreeCommand}">New</Button>
                            <Button Style="{DynamicResource {x:Static theme:CustomResources.NormalButtonStyleKey}}" VerticalAlignment="Top" Margin="10" Command="{Binding DeleteTreeCommand}" CommandParameter="{Binding SelectedItem, ElementName=ListTrees}">Delete</Button>
                            <Button Style="{DynamicResource {x:Static theme:CustomResources.NormalButtonStyleKey}}" VerticalAlignment="Top" Margin="10" Command="{Binding ViewTreeCommand}" CommandParameter="{Binding SelectedItem, ElementName=ListTrees}">View</Button>
                            <Button Style="{DynamicResource {x:Static theme:CustomResources.NormalButtonStyleKey}}" VerticalAlignment="Top" Margin="10" Command="{Binding CloseCommand}">Close</Button>

                        </StackPanel>
                    </Border>
                </Grid>
            </Border>
        </Grid>

        <Grid Grid.Row="1" Style="{StaticResource DetailedView}" Visibility="{Binding Path=CurrentDetailedView, Converter={StaticResource NullToVisibility}}">
            <Border Background="Black" Opacity="0.4" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch">
            </Border>
            <Border CornerRadius="3" Opacity="1" Background="{StaticResource DetailedViewHeaderBrush}" HorizontalAlignment="Center"  VerticalAlignment="Center" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock HorizontalAlignment="Center" 
                                       VerticalAlignment="Center" 
                                       Foreground="White"
                                       FontWeight="Bold"
                                       FontSize="14"
                                       Text="{Binding CurrentDetailedView.Title}">
                        </TextBlock>
                        <Button Command="{Binding CurrentDetailedView.CloseCommand}" 
                                    HorizontalAlignment="Right" 
                                    Grid.Column="1"
                                    Margin="5" 
                                    Background="{x:Null}" 
                                    BorderBrush="{x:Null}" 
                                    Style="{DynamicResource {x:Static theme:CustomResources.ButtonWithBorderGlowTemplateKey}}" 
                                    Width="15" Height="15" ToolTip="Close" Focusable="False" IsTabStop="False">
                            <Path Data="M0.5,0.5 L18.5,18.5 M 18.5,0.5 L 0.5,18.5" Stretch="Uniform" StrokeThickness="1" Stroke="White" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Button>
                    </Grid>
                    <Border Grid.Row="1" CornerRadius="0,0,3,3" Opacity="1" Background="#FFFFFF" Margin="2,0,2,2" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" >
                        <ContentControl Content="{Binding Path=CurrentDetailedView}"/>
                    </Border>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>
